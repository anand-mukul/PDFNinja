generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model User {
  id    String @id @unique
  email String @unique

  files    File[]
  messages Message[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model File {
  id           String       @id @default(cuid())
  name         String
  uploadStatus UploadStatus @default(PENDING)
  url          String
  key          String

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([userId])
}

model Message {
  id            String  @id @default(cuid())
  text          String  @db.Text
  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  file   File?   @relation(fields: [fileId], references: [id])
  fileId String?

  @@index([userId])
  @@index([fileId])
}
